♦ POLYNOMIAL ADDITION 




#include <stdio.h>

struct term {
    int coeff;
    int expo;
};

void printPoly(struct term poly[], int n) {
    for (int i = 0; i < n; i++) {
        printf("%dx^%d", poly[i].coeff, poly[i].expo);
        if (i != n - 1)
            printf(" + ");
    }
    printf("\n");
}

int main() {
    int n1, n2;

    printf("Enter number of terms in first polynomial: ");
    scanf("%d", &n1);
    struct term poly1[n1];
    printf("Enter coeff and expo for first polynomial (descending exponent order):\n");
    for (int i = 0; i < n1; i++)
        scanf("%d %d", &poly1[i].coeff, &poly1[i].expo);

    printf("Enter number of terms in second polynomial: ");
    scanf("%d", &n2);
    struct term poly2[n2];
    printf("Enter coeff and expo for second polynomial (descending exponent order):\n");
    for (int i = 0; i < n2; i++)
        scanf("%d %d", &poly2[i].coeff, &poly2[i].expo);

  
    struct term polyResult[n1 + n2];
    int i = 0, j = 0, k = 0;

  
    while (i < n1 && j < n2) {
        if (poly1[i].expo == poly2[j].expo) {
            polyResult[k].coeff = poly1[i].coeff + poly2[j].coeff;
            polyResult[k].expo = poly1[i].expo;
            i++; j++; k++;
        }
        else if (poly1[i].expo > poly2[j].expo) {
            polyResult[k] = poly1[i];
            i++; k++;
        }
        else {
            polyResult[k] = poly2[j];
            j++; k++;
        }
    }

   
    while (i < n1) {
        polyResult[k] = poly1[i];
        i++; k++;
    }

  
    while (j < n2) {
        polyResult[k] = poly2[j];
        j++; k++;
    }


    printf("\nResultant Polynomial after Addition:\n");
    printPoly(polyResult, k);

    return 0;
}
